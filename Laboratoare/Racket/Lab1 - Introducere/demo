#lang racket

(+ 2 3)
(max (+ 2 3 4) 4)

(if(= 2 4)
   2
   (max 3 4))

(cond
  [(< 3 1) 0]
  [(< 3 3) 1] 
  [(< 3 4) 2] 
  [(< 3 5) 3]
  [else 4])

; Define
(define x 2)

(define y (+ x 2))

(define (incrementare n) ; functie
  (+ n 1))

(define (suma x y)
  (+ x y))

(define (factorial n)
  (if (= n 0)
      1
      (* (factorial (- n 1)) n)))

; Perechi (o pereche reprezinta un tuplu format din 2 elemente)
(cons 1 2)
(car (cons 1 2)); primul element
(cdr (cons 1 2)); al doilea element

; Lista (o lista nevida este considerata o pereche formata din primul element si restul listei
(list 1 2 3)
'(1 2 3)
(list (+ 2 3) 1 2)
'((+ 2 3) 1 2)
(car (list 1 2 3))
(cdr (list 1 2 3))
'()
null
(list? 5)
(list? '(1 2 3))

(define (len L)
  (if (null? L)
      0
      (+ 1 (len (cdr L)))))

(cons 1 '(2 3 4))
(append '(1 2 3) '(5 6))
  
  